{"version":3,"sources":["history.js","services/EmployeeService.ts","pages/Employee/createOrEdit.tsx","pages/Employee/index.tsx","pages/Exception/index.tsx","App.tsx","index.tsx"],"names":["createBrowserHistory","http","axios","create","baseURL","headers","interceptors","response","use","error","data","setTimeout","Promise","reject","status","config","method","history","push","employeeService","get","id","console","log","delete","CreateOrEdit","params","useParams","useState","employee","setEmployee","employeeTypes","setEmployeeTypes","useEffect","idParam","parseInt","then","catch","e","className","type","required","value","firstName","onChange","target","lastName","email","employeeTypeId","selected","map","et","name","Index","employees","setEmployees","useHistory","Button","variant","onClick","Table","striped","hover","responsive","pt","index","employeeTypeName","age","result","deleteRow","Exception","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0011d672.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nexport interface EmployeeDTO {\r\n  firstName: string;\r\n  lastName: string;\r\n  birthDate: Date;\r\n  email: string;\r\n  employeeTypeId: number | undefined | null;\r\n}\r\nexport interface EmployeeIndexDTO {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  age?: number;\r\n  email: string;\r\n  employeeTypeName: string;\r\n}\r\nexport interface EmployeeType {\r\n  id: string;\r\n  name: string;\r\n}\r\nconst baseUrl = `/api/employee/`;\r\nconst http = axios.create({\r\n  baseURL: baseUrl,\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst getAll = () => {\r\n  return http.get<EmployeeIndexDTO[]>(\"\");\r\n};\r\nconst getById = (id: number) => {\r\n  console.log(id, \"httpservice\");\r\n  return http.get<EmployeeDTO>(`?id=${id}`);\r\n};\r\nconst create = (model: EmployeeDTO) => {\r\n  return http.post(\"\", model);\r\n};\r\nconst update = (model: EmployeeDTO, id: number) => {\r\n  return http.put(\"\", { model: model, id: id });\r\n};\r\nconst _delete = (id: number) => {\r\n  return http.delete(`?${id}`);\r\n};\r\nconst getEmployeeTypes = () => {\r\n  return http.get<EmployeeType[]>(\"/getEmployeeTypes\");\r\n};\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (!error.response || typeof error.response.data !== \"object\") {\r\n      setTimeout(() => {}, 1000);\r\n      return Promise.reject(error);\r\n    }\r\n    const { status, config, data } = error.response;\r\n    if (config.method === \"get\") {\r\n      if (status === 401) {\r\n        history.push(\"/exception/type=401\");\r\n      } else if (status === 403) {\r\n        history.push(\"/exception/type=403\");\r\n      } else if (status === 404) {\r\n        history.push(\"/exception/type=404\");\r\n      } else if (status === 500) {\r\n        history.push(\"/exception/type=500\");\r\n      }\r\n    }\r\n  }\r\n);\r\nexport const employeeService = {\r\n  getAll,\r\n  getById,\r\n  create,\r\n  update,\r\n  delete: _delete,\r\n  getEmployeeTypes,\r\n};\r\n","import { useParams } from \"react-router-dom\";\r\nimport {\r\n  EmployeeType,\r\n  EmployeeDTO,\r\n  employeeService,\r\n} from \"../../services/EmployeeService\";\r\nimport { useEffect, useState } from \"react\";\r\nconst CreateOrEdit = () => {\r\n  interface RouteParams {\r\n    id: string;\r\n  }\r\n\r\n  const params = useParams<RouteParams>();\r\n  const [employee, setEmployee] = useState<Partial<EmployeeDTO>>();\r\n  const [employeeTypes, setEmployeeTypes] = useState<Partial<EmployeeType>[]>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    const idParam = parseInt(params.id);\r\n    employeeService\r\n      .getEmployeeTypes()\r\n      .then((response) => setEmployeeTypes(response.data));\r\n    if (idParam) {\r\n      employeeService\r\n        .getById(idParam)\r\n        .then((response) => {\r\n          setEmployee(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }, [params.id]);\r\n  return (\r\n    <div className=\"employeeForm col-md-8\">\r\n      <div className=\"col-md-6\">\r\n        <label className=\"form-label\">Ad</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"name\"\r\n          required\r\n          value={employee?.firstName}\r\n          onChange={(e) =>\r\n            setEmployee({ ...employee, firstName: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <label className=\"form-label\">Soyad</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"name\"\r\n          required\r\n          value={employee?.lastName}\r\n          onChange={(e) =>\r\n            setEmployee({ ...employee, lastName: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <label className=\"form-label\">E-posta</label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"email\"\r\n          required\r\n          value={employee?.email}\r\n          onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <label className=\"form-label\">DoÄŸum Tarihi</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"birthDate\" />\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <label className=\"form-label\">Pozisyon</label>\r\n        <select\r\n          id=\"inputState\"\r\n          className=\"form-select\"\r\n          value={employee?.employeeTypeId}\r\n          onChange={(e) =>\r\n            setEmployee({ ...employee, employeeTypeId: e.target.value })\r\n          }\r\n        >\r\n          <option selected>Choose...</option>\r\n          {employeeTypes.map((et) => (\r\n            <option value={et.id}>{et.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"col-12 pt-1\">\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Sign in\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrEdit;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  employeeService,\r\n  EmployeeIndexDTO,\r\n} from \"../../services/EmployeeService\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Index() {\r\n  const [employees, setEmployees] = useState<EmployeeIndexDTO[]>([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    employeeService\r\n      .getAll()\r\n      .then((response) => {\r\n        setEmployees(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n  const deleteRow = (id: number) => {\r\n    const result = employeeService.delete(id);\r\n    console.log(result);\r\n  };\r\n  return (\r\n    <div className=\"employee-index\">\r\n      <div className=\"d-flex justify-content-end me-3 mt-3\">\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() => history.push(\"/employee/create\")}\r\n        >\r\n          Personel Ekle\r\n        </Button>\r\n      </div>\r\n\r\n      <Table striped hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Ad Soyad</th>\r\n            <th className=\"d-none d-sm-table-cell\">Pozisyon</th>\r\n            <th className=\"d-none d-sm-table-cell\">YaÅŸ</th>\r\n            <th className=\"d-none d-md-table-cell\">E-posta</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((pt, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{pt.firstName + pt.lastName}</td>\r\n                <td className=\"d-none d-sm-table-cell\">\r\n                  {pt.employeeTypeName}\r\n                </td>\r\n                <td className=\"d-none d-sm-table-cell\">{pt.age}</td>\r\n                <td className=\"d-none d-md-table-cell\">{pt.email}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"mx-1\"\r\n                    onClick={() => history.push(\"/employee/edit/\" + pt.id)}\r\n                  >\r\n                    GÃ¼ncelle\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={() => deleteRow(pt.id)}>\r\n                    Sil\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\ninterface RouteParams {\r\n  type: string;\r\n}\r\nconst Exception = () => {\r\n  const params = useParams<RouteParams>();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>Hata : {params.type}</p>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => history.push(\"/employee/index\")}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exception;\r\n","import { Switch, Route } from \"react-router-dom\";\nimport CreateOrEdit from \"./pages/Employee/createOrEdit\";\nimport Index from \"./pages/Employee\";\nimport Exception from \"./pages/Exception/index\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/employee/edit/:id\" component={CreateOrEdit} />\n        <Route path=\"/employee/create\" component={CreateOrEdit} />\n        <Route path=\"/employee/index\" component={Index} />\n        <Route path=\"/exception/type=:type\" component={Exception} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Router } from \"react-router-dom\";\nimport \"./dist/bootstrap/bootstrap.min.css\";\nimport history from \"./history.js\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}